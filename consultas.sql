
SELECT ID , NAME, LASTNAMEONE, LASTNAMETWO,
(SELECT NAME FROM OFFICE WHERE EMPLOYEE.IDOFFICEFK = ID) AS OFFICENAME
FROM EMPLOYEE;

/* PERMITE TRAER LOS EMPLEADOS RELACIONADOS A UNA OFICINA */ 
SELECT ID , NAME,
(SELECT NAME FROM EMPLOYEE WHERE OFFICE.ID = IDOFFICEFK ) AS EMPLOYEENAME,
(SELECT LASTNAMEONE FROM EMPLOYEE WHERE OFFICE.ID = IDOFFICEFK) AS EMPLOYEELASTNAME
FROM OFFICE AS OE;


SELECT ID, NAME,
    (SELECT POSCOD FROM OFFICEADDRESS WHERE CITY.ID = IDCITYF,) AS CITYNAME
FROM CITY;


SELECT POSCOD,NAME, IDCITYFK
FROM OFFICEADDRESS oad
INNER JOIN CITY c ON oad.IDCITYFK = c.ID;

/* USANDO JOIN*/

SELECT e.ID,e.NAME, e.LASTNAMEONE
FROM EMPLOYEE e
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID;

/*DEVUELVE EL LISTADO DE LAS CIUDADES CON OFICINAS Y SUS RESPECTIVOS EMPLEADOS */
SELECT c.ID ,c.NAME, o.NAME, SUM(e.NAME)
FROM OFFICEADDRESS oa
INNER JOIN CITY c ON oa.IDCITYFK = c.ID
INNER JOIN OFFICE o ON oa.IDOFFICEFK = o.ID
INNER JOIN EMPLOYEE e ON e.IDOFFICEFK = o.ID; 

/*DEVUELVE EL LISTADO DE LAS CIUDADES CON OFICINAS Y EL NUMERO TOTAL DE EMPLEADOS.*/
SELECT c.ID, c.NAME AS CityName, o.NAME AS OfficeName, COUNT(e.ID) AS TotalEmployees
FROM OFFICEADDRESS oa
INNER JOIN CITY c ON oa.IDCITYFK = c.ID
INNER JOIN OFFICE o ON oa.IDOFFICEFK = o.ID
INNER JOIN EMPLOYEE e ON e.IDOFFICEFK = o.ID
GROUP BY c.ID, c.NAME, o.NAME;

/* DEVUELVE EL NUMERO DE EMPLEADOS QUE TIENE CADA CIUDAD*/
SELECT c.ID, c.NAME, COUNT(e.ID) AS TotalEmployees
FROM OFFICEADDRESS oa
INNER JOIN CITY c ON oa.IDCITYFK = c.ID
INNER JOIN OFFICE o ON oa.IDOFFICEFK = o.ID
INNER JOIN EMPLOYEE e ON e.IDOFFICEFK = o.ID
GROUP BY c.ID, c.NAME, o.NAME;


SELECT c.ID, c.NAME, COUNT(e.ID) AS TotalEmployees
FROM CITY c
INNER JOIN OFFICEADDRESS oa ON c.ID = IDCITYFK
INNER JOIN OFFICE o ON oa.IDOFFICEFK = o.ID
INNER JOIN EMPLOYEE e ON e.IDOFFICEFK = o.ID
GROUP BY c.ID, c.NAME, o.NAME;

/*PERMITE OBETNER LOS VENDEDORES QUE NO TIENEN NINGUN CLIENTE A CARGO*/
SELECT e.NAME, e.LASTNAMEONE, e.LASTNAMETWO, pe.NAME AS POSITION, o.PHONE
FROM EMPLOYEE e
INNER JOIN POSITIONEMPLOYEE pe ON e.IDPOSITIONFK = pe.ID
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID
LEFT JOIN CLIENT c ON e.ID = c.IDEMPLOYEEFK
WHERE e.IDPOSITIONFK = 3 AND c.IDEMPLOYEEFK IS NULL;

/*Devuelve la informacion del cliente relacionada con la del vendedor y la ubicacion de la oficina del vendedor */
SELECT c.NAME AS clientName, e.NAME AS employeeName, e.LASTNAMEONE AS lastName, ci.NAME AS cityName
FROM EMPLOYEE e
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID
INNER JOIN CLIENT c ON e.ID = c.IDEMPLOYEEFK
INNER JOIN OFFICEADDRESS oa ON o.ID = oa.IDOFFICEFK
INNER JOIN CITY ci ON oa.IDCITYFK = ci.ID;

/*Devuelve la informacion del cliente que no ha realizado ningun pago*/

SELECT c.NAME, e.NAME, e.LASTNAMEONE, o.PHONE  
FROM CLIENT c
INNER JOIN EMPLOYEE e ON c.IDEMPLOYEEFK = e.ID
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID
LEFT JOIN payment p ON c.ID = p.IDCLIENTFK
WHERE p.IDCLIENTFK IS NULL; 

/*Listado de los clientes que realizaron un pedido en 2008*/

SELECT ID, NAME,
(SELECT ORDERDATE FROM `ORDER` WHERE CLIENT.ID = IDCLIENTFK  ) AS ORDERDATE
FROM CLIENT
WHERE YEAR((SELECT ORDERDATE FROM `ORDER` WHERE CLIENT.ID = IDCLIENTFK  ) )=2008
ORDER BY NAME ASC;

/*Listado de los cliente con el total pagado por cada uno*/

SELECT c.ID, c.Name, SUM(p.TOTAL) AS TOTALPAYMENTS
FROM PAYMENT p 
INNER JOIN CLIENT c ON p.IDCLIENTFK = c.ID
GROUP BY c.ID, c.Name;

/*Listado de cliente con el total de ordenes realizadas*/

SELECT c.ID, c.NAME, COUNT(o.ID) AS TOTALORDERS
FROM `ORDER` o
INNER JOIN CLIENT c ON o.IDCLIENTFK = c.ID
GROUP BY c.ID, c.NAME;

/* Listado de productos que han estado en un pedido */

SELECT od.ID, od.ID, p.NAME
FROM ORDERDETAIL od
INNER JOIN PRODUCT p ON od.IDPRODUCTFK = p.ID;

/* Listado de los productos que nunca han estado en un pedido*/

SELECT p.ID, p.NAME
FROM ORDERDETAIL od
RIGHT JOIN PRODUCT p ON od.IDPRODUCTFK = p.ID
WHERE NOT EXISTS(SELECT 1 FROM PRODUCT WHERE od.IDPRODUCTFK = p.ID);


/*Listado de clientes que han realizado algun pago*/

SELECT ID, NAME
FROM CLIENT 
WHERE EXISTS (SELECT 1 FROM PAYMENT p WHERE IDCLIENTFK = CLIENT.ID);

/* Listado de clientes que no han realizado ningun pago */

SELECT c.ID, c.NAME
FROM PAYMENT p
RIGHT JOIN CLIENT c ON p.IDCLIENTFK = c.ID;
WHERE NOT EXISTS(SELECT 1 FROM CLIENT WHERE p.IDCLIENTFK = c.ID);

/* Clientes que han realizado pedido, pero no han realizado ningún pago */

SELECT c.ID, c.NAME
FROM CLIENT c
INNER JOIN `ORDER` o ON c.ID = o.IDCLIENTFK
INNER JOIN PAYMENT p ON c.ID = p.IDCLIENTFK
WHERE c.ID IN (SELECT o.IDCLIENTFK FROM `ORDER` o)
AND
c.ID NOT IN (SELECT p.IDCLIENTFK FROM PAYMENT p);

SELECT c.ID, c.NAME
FROM CLIENT c
INNER JOIN `ORDER` o ON c.ID = o.IDCLIENTFK
LEFT JOIN PAYMENT p ON c.ID = p.IDCLIENTFK
WHERE c.ID IN (SELECT o.IDCLIENTFK FROM `ORDER` o)
AND
p.IDCLIENTFK IS NULL;


/*Obtener la oficina de donde no trabaja ninguno de los empleado que han sido representante de clientes*/
SELECT DISTINCT of.ID, of.NAME
FROM OFFICE of
INNER JOIN EMPLOYEE e ON of.ID = e.IDOFFICEFK
INNER JOIN POSITIONEMPLOYEE pe ON e.IDPOSITIONFK = pe.ID
INNER JOIN CLIENT c ON e.ID = c.IDEMPLOYEEFK
INNER JOIN `ORDER` o ON c.ID = o.IDCLIENTFK
INNER JOIN ORDERDETAIL oe ON o.ID = oe.IDORDERFK
INNER JOIN PRODUCT p ON oe.IDPRODUCTFK = p.ID
INNER JOIN RANGERPRODUCT rp ON p.IDRANGERFK = rp.ID
WHERE  pe.ID = 3
AND
rp.ID = 'RNG001';

/*Devuelve el nombre, apellido, puesto y telefono de oficina de los empleados que no son representantes de ningun cliente*/

SELECT e.NAME, e.LASTNAMEONE, e.LASTNAMETWO, pe.NAME, o.NAME
FROM EMPLOYEE e
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID
INNER JOIN POSITIONEMPLOYEE pe ON e.IDPOSITIONFK = pe.ID
LEFT JOIN CLIENT c ON e.ID = c.IDEMPLOYEEFK
WHERE c.IDEMPLOYEEFK NOT IN (SELECT IDEMPLOYEEFK FROM CLIENT WHERE CLIENT.ID = IDEMPLOYEEFK);

SELECT e.NAME, e.LASTNAMEONE, e.LASTNAMETWO, pe.NAME, o.NAME
FROM EMPLOYEE e
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID
INNER JOIN POSITIONEMPLOYEE pe ON e.IDPOSITIONFK = pe.ID
LEFT JOIN CLIENT c ON e.ID = c.IDEMPLOYEEFK
WHERE c.IDEMPLOYEEFK IS NULL;

/*PERMITE OBETNER LOS VENDEDORES QUE NO TIENEN NINGUN CLIENTE A CARGO*/
SELECT e.NAME, e.LASTNAMEONE, pe.NAME AS POSITION
FROM EMPLOYEE e
INNER JOIN POSITIONEMPLOYEE pe ON e.IDPOSITIONFK = pe.ID
INNER JOIN OFFICE o ON e.IDOFFICEFK = o.ID
LEFT JOIN CLIENT c ON e.ID = c.IDEMPLOYEEFK
WHERE c.IDEMPLOYEEFK IS NULL;

/* SELECCIONAR EL PRODUCTO CON MENOS UNIDADES EN STOCK */

SELECT ID, NAME, STOCK 
FROM PRODUCT
WHERE STOCK = (SELECT MIN(STOCK) FROM product);

/* Producto con el precio de venta mas caro */

SELECT ID, NAME, PRICESALE
FROM product
WHERE PRICESALE = (SELECT MAX(PRICESALE) FROM product);

/* Clientes con el mayor limite de credito*/

SELECT ID, NAME , CREDITLIMIT
FROM client
WHERE CREDITLIMIT = (SELECT MAX(CREDITLIMIT) FROM client);

/* Devolver Nombre, Apellido, email de empleados que están a cargos de Alberto Soria o buscar por nombre del jefe */

SELECT e.ID, e.NAME, e.LASTNAMEONE , e.EMAIL
FROM EMPLOYEE e
INNER JOIN `BOSS` b ON e.IDBOOSFK = b.ID
WHERE b.Name = "Alberto Soria";

/* Clientes con un limite de credito mayor al total de pagos */
SELECT c.ID, c.Name
FROM CLIENT c
WHERE c.CREDITLIMIT > (SELECT SUM(TOTAL) FROM PAYMENT p WHERE p.IDCLIENTFK = c.ID);

/* Nombre del producto que ha vendido mas unidades */

SELECT od.IDPRODUCTFK, p.NAME
FROM ORDERDETAIL od
INNER JOIN PRODUCT p ON od.IDPRODUCTFK = p.ID
WHERE od.QUANTITY = (SELECT MAX(TotalQuantity) FROM (SELECT IDPRODUCTFK, SUM(QUANTITY) AS TotalQuantity FROM ORDERDETAIL GROUP BY IDPRODUCTFK) AS Subquery);
